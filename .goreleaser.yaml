# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

project_name: kat

env:
  - DOCKER_REGISTRY=ghcr.io/macropower

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: kat
    main: ./cmd/kat
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X github.com/macropower/kat/pkg/version.Version={{.Version}}
      - -X github.com/macropower/kat/pkg/version.Branch={{.Branch}}
      - -X github.com/macropower/kat/pkg/version.BuildUser={{.Env.USER}}@{{.Env.HOSTNAME}}
      - -X github.com/macropower/kat/pkg/version.BuildDate={{.Date}}
    flags:
      - -trimpath

archives:
  - formats: [tar.gz]
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - LICENSE

gomod:
  proxy: true

checksum:
  name_template: "checksums.txt"

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

# https://goreleaser.com/customization/sign
signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

notarize:
  # https://goreleaser.com/customization/notarize/#cross-platform
  macos:
    - enabled: '{{ isEnvSet "MACOS_SIGN_P12" }}'
      sign:
        certificate: "{{.Env.MACOS_SIGN_P12}}"
        password: "{{.Env.MACOS_SIGN_PASSWORD}}"
      notarize:
        issuer_id: "{{.Env.MACOS_NOTARY_ISSUER_ID}}"
        key_id: "{{.Env.MACOS_NOTARY_KEY_ID}}"
        key: "{{.Env.MACOS_NOTARY_KEY}}"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: Fixes
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999

homebrew_casks:
  - name: kat
    conflicts:
      - formula: kat
    repository:
      owner: MacroPower
      name: homebrew-tap
    url:
      template: &archiveTemplate >-
        https://github.com/MacroPower/kat/releases/download/{{ .Tag }}/
        {{- .ProjectName }}_
        {{- title .Os }}_
        {{- if eq .Arch "amd64" }}x86_64
        {{- else if eq .Arch "386" }}i386
        {{- else }}{{ .Arch }}{{ end -}}
        {{- if .Arm }}v{{ .Arm }}{{ end -}}
        .tar.gz
    commit_msg_template: "chore: formula update for kat {{ .Tag }}"
    commit_author: &commitAuthor
      name: botty-mcbottington
      email: 168950816+botty-mcbottington[bot]@users.noreply.github.com
    homepage: &homepage "https://github.com/MacroPower/kat/"
    description: &description "TUI for rendering, validating, and displaying local Kubernetes manifests"
    license: "Apache 2.0"
    skip_upload: false

nix:
  - name: kat
    repository:
      owner: MacroPower
      name: nur-packages
    url_template: *archiveTemplate
    commit_msg_template: "chore: pkg update for kat {{ .Tag }}"
    commit_author: *commitAuthor
    homepage: *homepage
    description: *description
    license: "asl20"
    skip_upload: false

docker_manifests:
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:latest'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:v{{ .Major }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'

dockers:
  - goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - "{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Tag }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
  - goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - "{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Tag }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"

docker_signs:
  - cmd: cosign
    artifacts: images
    output: true
    args:
      - "sign"
      - "${artifact}"
      - "--yes"
